package br.org.generation.minhalojadegames.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.web.server.ResponseStatusException;

import br.org.generation.minhalojadegames.model.Usuario;
import br.org.generation.minhalojadegames.repository.UsuarioRepository;

@Service
public class UsuarioService {

	@Autowired
	private UsuarioRepository usuarioRepository;
	
	public Optional<Usuario> cadastrarUsuario(Usuario usuario){
		
		if(usuarioRepository.findByUsuario(usuario.getUsuario()).isPresent())
			throw new ResponseStatusException(
					HttpStatus.BAD_REQUEST, "O usuario já existe", null);
		
		if(calcularIdade(usuario.getDataNascimento()) < 18)
			throw new ResponseStatusException(
					HttpStatus.BAD_REQUEST, "O usuario é menor de idade", null);
		
		usuario.setSenha(criptografarSenha(usuario.getSenha()));
		
		return Optional.of(usuarioRepository.save(usuario));
	}
	
	public Optional<Usuario> atualizarUsuario(Usuario usuario){
		
		if(usuarioRepository.findById(usuario.getId()).isPresent()) {
				
				Optional<Usuario> buscaUsuario = usuarioRepository.findByUsuario(usuario.getUsuario());
				
				if(buscaUsuario.isPresent()) {
					
					if(buscaUsuario.get().getId() != usuario.getId())
						throw new ResponseStatusException(
								HttpStatus.BAD_REQUEST, "O usuario já existe", null);
				}
				
				if(calcularIdade(usuario.getDataNascimento()) < 18)
					throw new ResponseStatusException(
							HttpStatus.BAD_REQUEST, "O usuario é menor de idade", null);
				
				usuario.setSenha(criptografarSenha(usuario.getSenha()));
				
				return Optional.of(usuarioRepository.save(usuario));
		}
		
		return Optional.empty();
	}
}
